@mixin flex($wrap: nowrap,$align: flex-start,$jc: flex-start) {
    display: flex;
    flex-wrap: $wrap;
    align-items: $align;
    justify-content: $jc;
}

@mixin pseudo($el) {
    &:#{$el} , &::#{$el} {
        content: '';
        @content;
    }
}
@mixin position( $l: auto, $t: auto, $r: auto, $b: auto) {
    left: $l;
    top: $t;
    right: $r;
    bottom: $b;
}

@mixin center($position) {

    position: absolute;
    
    @if $position == 'vertical' {
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @else if $position == 'horizontal' {
        left: 50%;
        -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translate(-50%);
    }
    @else if $position == 'both' {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}


@mixin media-up($breakpoint) {

    @if map-has-key($breakpoints, $breakpoint) {

        $breakpoint-value: map-get($breakpoints, $breakpoint);
        @media (min-width: $breakpoint-value) {
            @content;
        }
    } @else {
  
      // Log a warning.
      @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

@mixin media-down($breakpoint) {

    @if map-has-key($breakpoints, $breakpoint) {

        $breakpoint-value: map-get($breakpoints, $breakpoint);
        @media (max-width: $breakpoint-value) {
            @content;
        }
    } @else {
  
      // Log a warning.
      @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}